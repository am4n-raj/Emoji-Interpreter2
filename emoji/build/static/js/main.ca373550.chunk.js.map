{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["emojiDictionary","emojisWeknow","Object","keys","EmojiInterpreter","col","Math","floor","random","toString","useState","meaning","setMean","className","src","alt","placeholder","onChange","e","userInput","target","value","undefined","length","style","color","map","emoji","onClick","emojiClickHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAGMA,EAAiB,CACnB,eAAM,WACN,eAAM,QACN,eAAM,aACN,eAAM,MACN,eAAM,YACN,eAAM,OACN,eAAM,gCACN,iCAAS,gBACT,eAAM,WACN,eAAM,UACN,SAAK,WACL,eAAM,OACN,eAAM,OACN,eAAM,cACN,eAAM,QACN,eAAM,YACN,eAAM,WAGNC,EAAeC,OAAOC,KAAKH,GA6ChBI,MA3Cf,WAEE,IACMC,EAAM,IADQC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,IAE9D,EAAqBC,mBAAS,MAA9B,mBAAIC,EAAJ,KAAYC,EAAZ,KAiBF,OACE,sBAAKC,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,SAAsB,qBAAKC,IAAI,6EAA6EC,IAAI,WAChH,uBAAOF,UAAU,aAAaG,YAAY,iBAAiBC,SAnB/D,SAA2BC,GACzB,IAAIC,EAAWD,EAAEE,OAAOC,MACpBV,EAAUX,EAAgBmB,QACjBG,IAAVX,GAA0C,IAAnBQ,EAAUI,SAElCZ,EAAQ,sCAEVC,EAAQD,MAaN,qBAAIE,UAAU,UAAUW,MAAO,CAACC,MAAMpB,GAAtC,UAA6CM,EAA7C,OACA,oBAAIE,UAAU,SAAd,4BAGEZ,EAAayB,KAAI,SAAUC,GACzB,OAAO,sBACPd,UAAU,QAEVe,QAAS,kBAjBjB,SAA2BD,GAEzBf,EADcZ,EAAgB2B,IAgBXE,CAAkBF,IAHxB,SAIJA,GAFEA,UC7CAG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ca373550.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './App.css'\n\nconst emojiDictionary ={\n    \"üôÇ\": \"Smiling \",\n    \"üòÄ\": \"happy\",\n    \"üòç\": \"Heart Eyes\",\n    \"üòî\": \"sad\",\n    \"üò≥\": \"disbelief\",\n    \"‚ù§Ô∏è\": \"love\",\n    \"ü§£\": \"Rolling on the Floor Laughing\",\n    \"üòÆ‚Äçüí®\": \"Face Exhaling\",\n    \"ü•µ\": \"Hot Face\",\n    \"ü§¢\": \"Disgust\",\n    \"‚ú®\": \"Sparkles\",\n    \"üî•\": \"fire\",\n    \"ü§ë\": \"Rich\",\n    \"ü§ê\": \"No comments\",\n    \"üòé\": \"Smart\",\n    \"üßê\": \"Oh really\",\n    \"üò∞\": \"Anxious\"\n  };\n  \nvar emojisWeknow = Object.keys(emojiDictionary)\n\nfunction EmojiInterpreter() {\n\n  const randomColor = Math.floor(Math.random()*16777215).toString(16);\n  const col = \"#\"+randomColor;\n    var[meaning,setMean]=useState(null)\n  function emojiInputHandler(e){\n    var userInput= e.target.value;\n    var meaning = emojiDictionary[userInput];\n    if(meaning===undefined && userInput.length!==0)\n    {\n      meaning=\"We don't have this in our database\";\n    }\n    setMean(meaning)\n  \n  }\n\n  function emojiClickHandler(emoji){\n    var meaning = emojiDictionary[emoji];\n    setMean(meaning)\n  }\n  \n  return (\n    <div className=\"main\">\n      <h1 className=\"title\"><img src=\"https://emojipedia.org/static/img/logo/emojipedia-logo-64.f24011dcde3f.png\" alt=\"logo\" /></h1>\n      <input className=\"emojiInput\" placeholder=\" Search Emojis\" onChange={emojiInputHandler} />\n      <h3 className=\"meaning\" style={{color:col}}>{meaning} </h3>\n      <h3 className=\"title2\">Emojis we know</h3>\n      \n      {\n        emojisWeknow.map(function (emoji){\n          return <span \n          className=\"emoji\"\n          key={emoji}\n          onClick={()=>emojiClickHandler(emoji)}>\n            {emoji}\n            </span>\n        })\n      }\n      \n    \n    </div>\n  );\n}\nexport default EmojiInterpreter\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}